package ventanas;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import clases.Coneccion;
import java.awt.Color;
import java.awt.Graphics;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author luciano
 */
public class GraficarMarcas extends javax.swing.JFrame {

    String user;
    int[] vectorCantidadDeMarcas = new int[10];
    String[] vectorNombredeMarcas = new String[10];
    int Acer, Alienware, Apple, Asus, Brother, Dell, HP, Lenovo, Samsung, Philips;

    /**
     * Creates new form GraficarEstado
     */
    public GraficarMarcas() {
        initComponents();
        user = Login.userName;
        setSize(550, 450);
        setResizable(false);
        setTitle("Técnico - Sesión de " + user);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(labelFondo.getWidth(), labelFondo.getHeight(), Image.SCALE_DEFAULT));
        labelFondo.setIcon(icono);
        this.repaint();

        try {
            Connection cn = new Coneccion().conectar();
            String Query = "select marca,count(marca) as Marcas from equipos group by marca";
            PreparedStatement pst = cn.prepareStatement(Query);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                int posicion = 0;
                do {
                    vectorNombredeMarcas[posicion] = rs.getString(1);
                    vectorCantidadDeMarcas[posicion] = rs.getInt(2);

                    if (vectorNombredeMarcas[posicion].equalsIgnoreCase("Acer")) {
                        Acer = vectorCantidadDeMarcas[posicion];

                    } else if (vectorNombredeMarcas[posicion].equalsIgnoreCase("Alienware")) {
                        Alienware = vectorCantidadDeMarcas[posicion];

                    } else if (vectorNombredeMarcas[posicion].equalsIgnoreCase("Apple")) {
                        Apple = vectorCantidadDeMarcas[posicion];

                    } else if (vectorNombredeMarcas[posicion].equalsIgnoreCase("Asus")) {
                        Asus = vectorCantidadDeMarcas[posicion];

                    } else if (vectorNombredeMarcas[posicion].equalsIgnoreCase("Brother")) {
                        Brother = vectorCantidadDeMarcas[posicion];

                    } else if (vectorNombredeMarcas[posicion].equalsIgnoreCase("Dell")) {
                        Dell = vectorCantidadDeMarcas[posicion];

                    } else if (vectorNombredeMarcas[posicion].equalsIgnoreCase("HP")) {
                        HP = vectorCantidadDeMarcas[posicion];

                    } else if (vectorNombredeMarcas[posicion].equalsIgnoreCase("Lenovo")) {
                        Lenovo = vectorCantidadDeMarcas[posicion];
                    } else if (vectorNombredeMarcas[posicion].equalsIgnoreCase("Samsung")) {
                        Samsung = vectorCantidadDeMarcas[posicion];
                    } else if (vectorNombredeMarcas[posicion].equalsIgnoreCase("Philips")) {
                        Philips = vectorCantidadDeMarcas[posicion];
                    }
                    posicion++;
                } while (rs.next());
            }
        } catch (SQLException e) {
            System.err.println("Error en la consulta." + e);
            JOptionPane.showMessageDialog(null, "Error al consultar datos");
        }

        repaint();
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gráfica de Marcas");

        jLabel2.setText("Creado por Luciano Salgado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel2))
            .addComponent(labelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(jLabel2))
            .addComponent(labelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraficarMarcas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraficarMarcas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraficarMarcas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraficarMarcas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GraficarMarcas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelFondo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void paint(Graphics g) {
        super.paint(g);

        int totalMarcas = Acer + Alienware + Apple + Asus + Brother + Dell + HP + Lenovo + Samsung + Philips;

        int gradosAcer = Acer * 360 / totalMarcas;
        int gradosAlienware = Alienware * 360 / totalMarcas;
        int gradosApple = Apple * 360 / totalMarcas;
        int gradosAsus = Asus * 360 / totalMarcas;
        int gradosHP = HP * 360 / totalMarcas;
        int gradosBrother = Brother * 360 / totalMarcas;
        int gradosDell = Dell * 360 / totalMarcas;
        int gradosLenovo = Lenovo * 360 / totalMarcas;
        int gradosSamsung = Samsung * 360 / totalMarcas;
        int gradosPhilips = Philips * 360 / totalMarcas;

        //Marca Acer
        //Violeta
        g.setColor(new Color(175,122,197));
        g.fillArc(25, 100, 270, 270, 0, gradosAcer);
        g.fillRect(310, 120, 20, 20);
        g.drawString(Acer + " de Acer", 340, 135);
        
        //Marca Alienware
        //Verde
        g.setColor(new Color(0,255,0));
        g.fillArc(25, 100, 270, 270, gradosAcer, gradosAlienware);
        g.fillRect(310, 150, 20, 20);
        g.drawString(Alienware + " de Alienware", 340, 165);
        
        //Marca Apple
        //Verde Agua
        g.setColor(new Color(0,255,255));
        g.fillArc(25, 100, 270, 270, gradosAcer+ gradosAlienware, gradosApple);
        g.fillRect(310, 180, 20, 20);
        g.drawString(Apple + " de Apple", 340, 195);
        
        //Marca Asus
        //Azul
        g.setColor(new Color(55,0,255));
        g.fillArc(25, 100, 270, 270, gradosAcer+ gradosAlienware+ gradosApple, gradosAsus);
        g.fillRect(310, 210, 20, 20);
        g.drawString(Asus + " de Asus", 340, 225);
        
        //Marca Brother
        //Blanco
        g.setColor(new Color(255,255,255));
        g.fillArc(25, 100, 270, 270, gradosAcer+ gradosAlienware+ gradosApple + gradosAsus, gradosBrother);
        g.fillRect(310, 240, 20, 20);
        g.drawString(Brother + " de Brother", 340, 255);
        
        //Marca Dell
        //Amarillo
        g.setColor(new Color(247,220,111));
        g.fillArc(25, 100, 270, 270, gradosAcer+ gradosAlienware+ gradosApple + gradosAsus+ gradosBrother,gradosDell);
        g.fillRect(310, 270, 20, 20);
        g.drawString(Dell + " de Dell", 340, 285);
        
        //Marca HP
        //Azul Marino
        g.setColor(new Color(21,42,160));
        g.fillArc(25, 100, 270, 270, gradosAcer+ gradosAlienware+ gradosApple + gradosAsus+ gradosBrother+gradosDell,gradosHP);
        g.fillRect(310, 300, 20, 20);
        g.drawString(HP + " de HP", 340, 315);
        
        //Marca Lenovo
        //Naranja
        g.setColor(new Color(215,96,0));
        g.fillArc(25, 100, 270, 270, gradosAcer+ gradosAlienware+ gradosApple + gradosAsus+ gradosBrother+gradosDell+gradosHP,gradosLenovo);
        g.fillRect(310, 330, 20, 20);
        g.drawString(Lenovo + " de Lenovo", 340, 345);
        
        //Marca Samsung
        //Rosa
        g.setColor(new Color(215,96,140));
        g.fillArc(25, 100, 270, 270, gradosAcer+ gradosAlienware+ gradosApple + gradosAsus+ gradosBrother+gradosDell+gradosHP+gradosLenovo,gradosSamsung);
        g.fillRect(430, 120, 20, 20);
        g.drawString(Samsung + " de Samsung", 460, 135);
        
        //Marca Philips
        //Amarillo Canario
        g.setColor(new Color(215,196,25));
        g.fillArc(25, 100, 270, 270, gradosAcer+ gradosAlienware+ gradosApple + gradosAsus+ gradosBrother+gradosDell+gradosHP+gradosLenovo+gradosSamsung,gradosPhilips);
        g.fillRect(430, 150, 20, 20);
        g.drawString(Philips + " de Philips", 460, 165);        
    }
}